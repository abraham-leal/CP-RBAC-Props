zookeeper.connect=<ZOOKEEPER_URL>:2181
log.dirs=/var/lib/kafka/data
broker.id=1

group.initial.rebalance.delay.ms=0
log.retention.check.interval.ms=300000
log.retention.hours=168
log.segment.bytes=1073741824
num.io.threads=16
num.network.threads=8
num.partitions=1
num.recovery.threads.per.data.dir=2
offsets.topic.replication.factor=1
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
socket.send.buffer.bytes=102400
transaction.state.log.min.isr=2
transaction.state.log.replication.factor=1
zookeeper.connection.timeout.ms=18000
confluent.license.topic.replication.factor=1
confluent.metadata.topic.replication.factor=1
confluent.metrics.reporter.topic.replicas=1
confluent.support.metrics.enable=true
confluent.support.customer.id=anonymous

#### This sets up two additional ports to the PLAINTEXT/NO AUTH PORTS
#### The RBAC:SASL_PLAINTEXT:OAUTHBEARER Port is meant for impersonation-based CP Components
#### The SASL_PLAINTEXT:SASL_PLAINTEXT:PLAIN Port is meant for clients of the cluster
#### You could safely delete EXTERNAL AND INTERNAL ports if there are no dependencies on no auth 
listener.security.protocol.map=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT,RBAC:SASL_PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
listeners=EXTERNAL://:9092,INTERNAL://:9091,RBAC://:9093,SASL_PLAINTEXT://:9094
advertised.listeners=EXTERNAL://<KAFKA_URL>:9092,INTERNAL://e<KAFKA_URL>:9091,RBAC://<KAFKA_URL>:9093,SASL_PLAINTEXT://<KAFKA_URL>:9094

### Set-up token Service for CP Components on 9093/RBAC:SASL_PLAINTEXT ###
listener.name.rbac.oauthbearer.sasl.login.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
listener.name.rbac.oauthbearer.sasl.server.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
listener.name.rbac.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required publicKeyPath="/tmp/conf/public.pem";
listener.name.rbac.sasl.enabled.mechanisms=OAUTHBEARER

### Configurations for SASL_PLAINTEXT ###
### This authenticates access to the cluster for the listed users in the JAAS Config
listener.name.sasl_plaintext.sasl.enabled.mechanisms=PLAIN
listener.name.sasl_plaintext.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="abe-super" \
        password="somepass" \
        user_abe-super="somepass" \
        user_controlcenter="comepass" \
        user_admin="somepass";

## Inter Broker Listener Configuration
## Utilizes 9094/SASL_PLAINTEXT/PLAIN for inter broker communications
sasl.mechanism.inter.broker.protocol=PLAIN
security.inter.broker.protocol=SASL_PLAINTEXT
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
 username="abe-super" \
 password="somepass" \;


## Metrics Reporter Configuration
## Gives the metrics reporter auth for the cluster in order to produce. 
## Metrics reporter is a client, so it goes through 9094
## Enables Metrics Reporter
metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=<KAFKA_URL>:9094
confluent.metrics.reporter.topic.replicas=1
confluent.metrics.reporter.sasl.mechanism=PLAIN
confluent.metrics.reporter.security.protocol=SASL_PLAINTEXT
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="abe-super" \
        password="Confluent2020!";

### Set up RBAC Authorizer ###
authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
confluent.authorizer.access.rule.providers=CONFLUENT
super.users=User:Broker;User:abe-super;User:admin

### Set up LDAP connection, auth, and search ###
ldap.java.naming.provider.url=ldap://<ldap-address>:3268
ldap.java.naming.security.authentication=SIMPLE
ldap.java.naming.security.principal=<principal>
ldap.java.naming.security.credentials=<pass>
## Group based search ##
ldap.group.name.attribute=group=cn
ldap.group.object.class=groupOfNames
ldap.group.search.base=OU=Abe,OU=BOOTCAMP,DC=ad,DC=bootcamp,DC=confluent,DC=io
ldap.group.search.scope=2

## User based search ##
ldap.user.name.attribute=sAMAccountName
ldap.user.object.class=person
ldap.user.search.base=OU=Abe,OU=BOOTCAMP,DC=ad,DC=bootcamp,DC=confluent,DC=io
ldap.user.search.scope=2

### Initialize MDS service ###
confluent.metadata.server.advertised.listeners=http://<MDS-DNS>8090
confluent.metadata.server.listeners=http://0.0.0.0:8090
confluent.metadata.server.authentication.method=BEARER
confluent.metadata.server.token.auth.enable=true
confluent.metadata.server.token.max.lifetime.ms=3600000
confluent.metadata.server.token.key.path=/tmp/conf/tokenKeypair.pem
confluent.metadata.server.public.key.path=/tmp/conf/public.pem
confluent.metadata.server.token.signature.algorithm=RS256
